@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <ul class="navbar-nav ml-auto">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    User: @UserManager.GetUserName(User)
                </a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="register" href="@Url.Action("Register", "Account")">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" href="@Url.Action("Login", "Account")">Login</a>
            </li>
        }
    </ul>
</nav>
